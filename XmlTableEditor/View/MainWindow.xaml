<Window x:Class="XmlTableEditor.ViewModel.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:XmlTableEditor.ViewModel" 
        xmlns:core="clr-namespace:System;assembly=mscorlib"
    
        mc:Ignorable="d"
        Title="XmlTableEditor" Height="350" Width="525"
        MinHeight="300" MinWidth="350"
        DataContext="{DynamicResource ViewModelMain}">
    <Window.Resources>
        <vm:ViewModelMain x:Key="ViewModelMain"/>
        <ObjectDataProvider x:Key="genderEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="vm:Gender"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <Style TargetType="TextBox" x:Key="errTemplate">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>

    <DockPanel>
        <Border DockPanel.Dock="Top">
            <Menu x:Name="menu">
                <MenuItem Header="Файл">
                    <MenuItem Header="Открыть..."
                              Command="{Binding OpenFileCommand}"/>
                    <Separator />
                    <MenuItem Header="Сохранить" IsEnabled="{Binding IsFileOpened}" d:IsHidden="True"
                              Command="{Binding SaveFileCommand}"/>
                </MenuItem>
                <MenuItem Header="Правка">
                    <MenuItem Header="Добавить строку" IsEnabled="{Binding IsFileOpened}"
                              Command="{Binding AddRowCommand}"/>
                    <MenuItem Header="Удалить строку" IsEnabled="{Binding HasTarget}"
                              Command="{Binding DelRowCommand}" CommandParameter="{Binding SelectedStudent}"/>
                </MenuItem>
            </Menu>
        </Border>
        <Grid>
            <DataGrid Name="dgStudents" Grid.Row="0" Grid.Column="0" AutoGenerateColumns="False" HeadersVisibility="Column" CanUserAddRows="False" 
                      ItemsSource="{Binding Students}" SelectedItem="{Binding SelectedStudent}" SelectionMode="Single"
                      AlternationCount="2" AlternatingRowBackground="{DynamicResource {x:Static SystemColors.InactiveBorderBrushKey}}" Grid.ColumnSpan="2">
                <DataGrid.InputBindings>
                    <KeyBinding Key="Delete" Command="{Binding DelRowCommand}" CommandParameter="{Binding SelectedStudent}"/>
                </DataGrid.InputBindings>

                <DataGrid.Columns>
                    <DataGridTextColumn Header="ID" MinWidth="30" IsReadOnly="True"
                                    EditingElementStyle="{StaticResource errTemplate}"
                                    Binding="{Binding ID}"/>
                    <DataGridTextColumn Header="Полное имя"  MinWidth="150" Width="*"
                                    EditingElementStyle="{StaticResource errTemplate}"
                                    Binding="{Binding FullName, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                    <DataGridTextColumn Header="Возраст" MinWidth="60"
                                    EditingElementStyle="{StaticResource errTemplate}"
                                    Binding="{Binding Age, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                    <DataGridComboBoxColumn Header="Пол" MinWidth="70"
                                        ItemsSource="{Binding Source={StaticResource genderEnum}}"
                                        SelectedItemBinding="{Binding Gender, UpdateSourceTrigger=PropertyChanged}"/>
                </DataGrid.Columns>
            </DataGrid>
            <TextBlock Grid.Row="0" Grid.Column="0" TextAlignment="Center"
                       Visibility="{Binding Items.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=dgStudents}"
                       Text="Шаблон, информирующий о том, что в списке нет элементов..." Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
        </Grid>
    </DockPanel>
</Window>
